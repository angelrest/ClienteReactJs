{"version":3,"sources":["constants/index.js","util/APIUtils.js","user/login/Login.js","user/signup/Signup.js","util/Colors.js","common/LoadingIndicator.js","common/NotFound.js","common/ServerError.js","user/profile/Profile.js","common/AppHeader.js","marvel/Characters.js","marvel/Comics.js","marvel/Favourite.js","marvel/Show.js","app/App.js","serviceWorker.js","index.js"],"names":["API_BASE_URL","ACCESS_TOKEN","NAME_MIN_LENGTH","NAME_MAX_LENGTH","USERNAME_MIN_LENGTH","USERNAME_MAX_LENGTH","EMAIL_MAX_LENGTH","PASSWORD_MIN_LENGTH","PASSWORD_MAX_LENGTH","FAVOURITE_LIST_SIZE","API_MARVEL_URL","PUBLICKEY","PRIVATEKEY","TS","MD5","require","request","options","headers","Headers","Content-Type","localStorage","getItem","append","defaults","Object","assign","fetch","url","then","response","json","ok","Promise","reject","requestMarvel","getMarvelCharacters","offset","method","getMarvelCharactersComics","charactersid","FormItem","form_default","a","Item","Login","AntWrappedLoginForm","create","LoginForm","react_default","createElement","className","onLogin","this","props","Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","bind","assertThisInitialized","event","_this2","preventDefault","form","validateFields","err","values","loginRequest","body","JSON","stringify","login","setItem","accessToken","catch","error","status","notification_default","message","description","getFieldDecorator","onSubmit","rules","required","input_default","prefix","icon_default","type","size","name","placeholder","button_default","htmlType","Link","to","Signup","validateName","length","validateStatus","errorMsg","concat","validationStatus","validateEmail","email","RegExp","test","validateUsername","username","validatePassword","password","state","value","handleInputChange","validateUsernameAvailability","validateEmailAvailability","isFormInvalid","validationFun","target","inputName","inputValue","setState","defineProperty","objectSpread","signupRequest","signup","success","history","push","_this3","Signup_FormItem","label","help","autoComplete","onChange","hasFeedback","onBlur","disabled","_this4","usernameValue","usernameValidation","available","_this5","emailValue","emailValidation","colors","LoadingIndicator","antIcon","style","fontSize","spin","spin_default","indicator","display","textAlign","marginTop","NotFound","ServerError","Profile","user","isLoading","loadUserProfile","getUserProfile","notFound","serverError","match","params","variable","currentUser","nextProps","src_common_NotFound","src_common_ServerError","avatar_default","backgroundColor","substr","hash","i","charCodeAt","index","Math","abs","getAvatarColor","toUpperCase","Header","layout_default","AppHeader","handleMenuClick","_ref","key","onLogout","menuItems","menu_default","ProfileDropdownMenu","mode","selectedKeys","location","pathname","lineHeight","dropdownMenu","onClick","Divider","dropdown_default","overlay","trigger","getPopupContainer","document","getElementsByClassName","marginRight","withRouter","Meta","Characters","item","callback","random","e","console","log","message_default","calc2","list_default","grid","gutter","column","dataSource","results","renderItem","card_default","avatar","divider_default","src","thumbnail","path","extension","title","tag_default","color","shape","calc","icon","popconfirm_default","onConfirm","confirm","onCancel","cancel","okText","cancelText","theme","Comics","characters","savedata","c","row_default","align","col_default","span","bordered","background","font-size","opacity","Favoutire","page","searcomics","sizecomics","element","itemLayout","pagination","pageSize","total","titleCharacter","titleComics","Favourite_Meta","uriimage","Sider","Content","Show","hideModal","visible","comics","totalElements","currenUser","viewcomics","comicssize","lengthcomics","isload","loadCharacte","onShowSizeChange","saveData","showModal","loadComicsView","funtionRandom","isAuthenticated","id","rand","floor","data","userid","comicsRequest","comicsid","charactersRequest","getComicsView","content","current","promise","_this6","slice","limit","_this7","favouriteViews","Favourite","comicsView","forEach","marvel_Comics","characterViews","marvel_Characters","Show_Header","pagination_default","showQuickJumper","modal_default","bodyStyle","width","onOk","carousel_default","autoplay","effect","App","handleLogout","loadCurrentUser","handleLogin","config","placement","top","duration","redirectTo","arguments","undefined","notificationType","removeItem","src_common_AppHeader","App_Content","Switch","Route","exact","render","src_marvel_Show","user_login_Login","component","user_profile_Profile","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","BrowserRouter","src_app_App","getElementById","URL","process","origin","addEventListener","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f66c9faf.chunk.js","sourcesContent":["export const API_BASE_URL = 'http://localhost:8080/api';\nexport const ACCESS_TOKEN = 'accessToken';\nexport const MESSAJE_APP='Cliente (API-REST)';\n\n\n\n\nexport const NAME_MIN_LENGTH = 4;\nexport const NAME_MAX_LENGTH = 40;\n\nexport const USERNAME_MIN_LENGTH = 3;\nexport const USERNAME_MAX_LENGTH = 15;\n\nexport const EMAIL_MAX_LENGTH = 40;\n\nexport const PASSWORD_MIN_LENGTH = 6;\nexport const PASSWORD_MAX_LENGTH = 20;\n\n\n//MARVEL\nexport const MARVEL_LIST_SIZE=20;\nexport const FAVOURITE_LIST_SIZE=50;\nexport const API_MARVEL_URL='http://gateway.marvel.com/v1/public';\nexport const PUBLICKEY='4ca3843acc12618260188e6659a872b5';\nexport const PRIVATEKEY='e656069cb8a1d3b8963750ae1e8558dea405b953';\nexport const TS=1;","import { API_BASE_URL, ACCESS_TOKEN , API_MARVEL_URL, PUBLICKEY, PRIVATEKEY, TS, FAVOURITE_LIST_SIZE} from '../constants';\n\nvar MD5=require('md5');\n\nconst request = (options) => {\n    const headers = new Headers({\n        'Content-Type': 'application/json',\n    })\n    \n    if(localStorage.getItem(ACCESS_TOKEN)) {\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\n    }\n\n    const defaults = {headers: headers};\n    options = Object.assign({}, defaults, options);\n\n    return fetch(options.url, options)\n    .then(response => \n        response.json().then(json => {\n            if(!response.ok) {\n                return Promise.reject(json);\n            }\n            return json;\n        })\n    );\n};\n\nconst requestMarvel = (options) => {\n    const headers = new Headers({\n        'Content-Type': 'application/json',\n    })\n    \n    const defaults = {headers: headers};\n    options = Object.assign({}, defaults, options);\n\n    return fetch(options.url, options)\n    .then(response => \n        response.json().then(json => {\n            if(!response.ok) {\n                return Promise.reject(json);\n            }\n            return json;\n        })\n    );\n};\n\n\n\n\n\nexport function login(loginRequest) {\n    return request({\n        url: API_BASE_URL + \"/auth/signin\",\n        method: 'POST',\n        body: JSON.stringify(loginRequest)\n    });\n}\n\nexport function signup(signupRequest) {\n    return request({\n        url: API_BASE_URL + \"/auth/signup\",\n        method: 'POST',\n        body: JSON.stringify(signupRequest)\n    });\n}\n\nexport function createCharacter(charactersRequest) {\n    return request({\n        url: API_BASE_URL + \"/marvel\",\n        method: 'POST',\n        body: JSON.stringify(charactersRequest)\n    });\n}\n\nexport function checkUsernameAvailability(username) {\n    return request({\n        url: API_BASE_URL + \"/user/checkUsernameAvailability?username=\" + username,\n        method: 'GET'\n    });\n}\n\nexport function checkEmailAvailability(email) {\n    return request({\n        url: API_BASE_URL + \"/user/checkEmailAvailability?email=\" + email,\n        method: 'GET'\n    });\n}\n\nexport function checkCharacterAvailability(characters,comics,userid) {\n    return request({\n        url: API_BASE_URL + \"/user/checkComicsAvailability?characters=\" + characters\n        +\"&comics=\"+ comics + \"&userid=\" + userid,\n\n        method: 'GET'\n    });\n}\n\nexport function getAllPolls(page, size, characters) {\n    page = page || 0;\n    size = size || FAVOURITE_LIST_SIZE;\n\n    return request({\n        url: API_BASE_URL + \"/marvel?page=\" + page + \"&size=\" + size + \"&characters\" + characters,\n        method: 'GET'\n    });\n}\n\n\n\nexport function getCurrentUser() {\n    if(!localStorage.getItem(ACCESS_TOKEN)) {\n        return Promise.reject(\"No access token set.\");\n    }\n\n    return request({\n        url: API_BASE_URL + \"/user/me\",\n        method: 'GET'\n    });\n}\n\nexport function getUserProfile(username) {\n    return request({\n        url: API_BASE_URL + \"/users/\" + username,\n        method: 'GET'\n    });\n}\n\nexport function getComicsView(page,size) {\n     page = page || 0;\n    size = size || FAVOURITE_LIST_SIZE;\n    return request({\n        url: API_BASE_URL + \"/marvel?page=\"+page+\"&size=\"+size,\n        method: 'GET'\n    });\n}\n\n\nexport function getMarvelCharacters(offset) {\n    return requestMarvel({\n        url: API_MARVEL_URL + \"/characters?ts=\"+TS+\"&apikey=\"+PUBLICKEY+\"&hash=\"+MD5(TS+PRIVATEKEY+PUBLICKEY)+\"&offset=\"+offset,\n        method: 'GET'    \n    });\n}\n\nexport function getMarvelCharactersComics(charactersid) {\n    return requestMarvel({\n        url: API_MARVEL_URL + \"/characters/\"+charactersid+\"/comics?ts=\"+TS+\"&apikey=\"+PUBLICKEY+\"&hash=\"+MD5(TS+PRIVATEKEY+PUBLICKEY),\n        method: 'GET'    \n    });\n}\n\n\n\n\n\n","import React, { Component } from 'react';\nimport { login } from '../../util/APIUtils';\nimport './Login.css';\nimport { Link } from 'react-router-dom';\nimport { ACCESS_TOKEN } from '../../constants';\n\nimport { Form, Input, Button, Icon, notification } from 'antd';\nconst FormItem = Form.Item;\n\nclass Login extends Component {\n    render() {\n        const AntWrappedLoginForm = Form.create()(LoginForm)\n        return (\n            <div className=\"login-container\">\n                <h1 className=\"page-title\">Login</h1>\n                <div className=\"login-content\">\n                    <AntWrappedLoginForm onLogin={this.props.onLogin} />\n                </div>\n            </div>\n        );\n    }\n}\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();   \n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                const loginRequest = Object.assign({}, values);\n                login(loginRequest)\n                .then(response => {\n                    localStorage.setItem(ACCESS_TOKEN, response.accessToken);\n                    this.props.onLogin();\n                }).catch(error => {\n                    if(error.status === 401) {\n                        notification.error({\n                            message: 'Polling App',\n                            description: 'Your Username or Password is incorrect. Please try again!'\n                        });                    \n                    } else {\n                        notification.error({\n                            message: 'Polling App',\n                            description: error.message || 'Sorry! Something went wrong. Please try again!'\n                        });                                            \n                    }\n                });\n            }\n        });\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                <FormItem>\n                    {getFieldDecorator('usernameOrEmail', {\n                        rules: [{ required: true, message: 'Please input your username or email!' }],\n                    })(\n                    <Input \n                        prefix={<Icon type=\"user\" />}\n                        size=\"large\"\n                        name=\"usernameOrEmail\" \n                        placeholder=\"Username or Email\" />    \n                    )}\n                </FormItem>\n                <FormItem>\n                {getFieldDecorator('password', {\n                    rules: [{ required: true, message: 'Please input your Password!' }],\n                })(\n                    <Input \n                        prefix={<Icon type=\"lock\" />}\n                        size=\"large\"\n                        name=\"password\" \n                        type=\"password\" \n                        placeholder=\"Password\"  />                        \n                )}\n                </FormItem>\n                <FormItem>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\" className=\"login-form-button\">Login</Button>\n                    Or <Link to=\"/signup\">register now!</Link>\n                </FormItem>\n            </Form>\n        );\n    }\n}\n\n\nexport default Login;","import React, { Component } from 'react';\nimport { signup, checkUsernameAvailability, checkEmailAvailability } from '../../util/APIUtils';\nimport './Signup.css';\nimport { Link } from 'react-router-dom';\nimport { \n    NAME_MIN_LENGTH, NAME_MAX_LENGTH, \n    USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH,\n    EMAIL_MAX_LENGTH,\n    PASSWORD_MIN_LENGTH, PASSWORD_MAX_LENGTH\n} from '../../constants';\n\nimport { Form, Input, Button, notification } from 'antd';\nconst FormItem = Form.Item;\n\nclass Signup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: {\n                value: ''\n            },\n            username: {\n                value: ''\n            },\n            email: {\n                value: ''\n            },\n            password: {\n                value: ''\n            }\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.validateUsernameAvailability = this.validateUsernameAvailability.bind(this);\n        this.validateEmailAvailability = this.validateEmailAvailability.bind(this);\n        this.isFormInvalid = this.isFormInvalid.bind(this);\n    }\n\n    handleInputChange(event, validationFun) {\n        const target = event.target;\n        const inputName = target.name;        \n        const inputValue = target.value;\n\n        this.setState({\n            [inputName] : {\n                value: inputValue,\n                ...validationFun(inputValue)\n            }\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n    \n        const signupRequest = {\n            name: this.state.name.value,\n            email: this.state.email.value,\n            username: this.state.username.value,\n            password: this.state.password.value\n        };\n        signup(signupRequest)\n        .then(response => {\n            notification.success({\n                message: 'Cliente (API-REST)',\n                description: \"Thank you! You're successfully registered. Please Login to continue!\",\n            });          \n            this.props.history.push(\"/login\");\n        }).catch(error => {\n            notification.error({\n                message: 'Cliente (API-REST)',\n                description: error.message || 'Sorry! Something went wrong. Please try again!'\n            });\n        });\n    }\n\n    isFormInvalid() {\n        return !(this.state.name.validateStatus === 'success' &&\n            this.state.username.validateStatus === 'success' &&\n            this.state.email.validateStatus === 'success' &&\n            this.state.password.validateStatus === 'success'\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"signup-container\">\n                <h1 className=\"page-title\">Sign Up</h1>\n                <div className=\"signup-content\">\n                    <Form onSubmit={this.handleSubmit} className=\"signup-form\">\n                        <FormItem \n                            label=\"Full Name\"\n                            validateStatus={this.state.name.validateStatus}\n                            help={this.state.name.errorMsg}>\n                            <Input \n                                size=\"large\"\n                                name=\"name\"\n                                autoComplete=\"off\"\n                                placeholder=\"Your full name\"\n                                value={this.state.name.value} \n                                onChange={(event) => this.handleInputChange(event, this.validateName)} />    \n                        </FormItem>\n                        <FormItem label=\"Username\"\n                            hasFeedback\n                            validateStatus={this.state.username.validateStatus}\n                            help={this.state.username.errorMsg}>\n                            <Input \n                                size=\"large\"\n                                name=\"username\" \n                                autoComplete=\"off\"\n                                placeholder=\"A unique username\"\n                                value={this.state.username.value} \n                                onBlur={this.validateUsernameAvailability}\n                                onChange={(event) => this.handleInputChange(event, this.validateUsername)} />    \n                        </FormItem>\n                        <FormItem \n                            label=\"Email\"\n                            hasFeedback\n                            validateStatus={this.state.email.validateStatus}\n                            help={this.state.email.errorMsg}>\n                            <Input \n                                size=\"large\"\n                                name=\"email\" \n                                type=\"email\" \n                                autoComplete=\"off\"\n                                placeholder=\"Your email\"\n                                value={this.state.email.value} \n                                onBlur={this.validateEmailAvailability}\n                                onChange={(event) => this.handleInputChange(event, this.validateEmail)} />    \n                        </FormItem>\n                        <FormItem \n                            label=\"Password\"\n                            validateStatus={this.state.password.validateStatus}\n                            help={this.state.password.errorMsg}>\n                            <Input \n                                size=\"large\"\n                                name=\"password\" \n                                type=\"password\"\n                                autoComplete=\"off\"\n                                placeholder=\"A password between 6 to 20 characters\" \n                                value={this.state.password.value} \n                                onChange={(event) => this.handleInputChange(event, this.validatePassword)} />    \n                        </FormItem>\n                        <FormItem>\n                            <Button type=\"primary\" \n                                htmlType=\"submit\" \n                                size=\"large\" \n                                className=\"signup-form-button\"\n                                disabled={this.isFormInvalid()}>Sign up</Button>\n                            Already registed? <Link to=\"/login\">Login now!</Link>\n                        </FormItem>\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n\n    // Validation Functions\n\n    validateName = (name) => {\n        if(name.length < NAME_MIN_LENGTH) {\n            return {\n                validateStatus: 'error',\n                errorMsg: `Name is too short (Minimum ${NAME_MIN_LENGTH} characters needed.)`\n            }\n        } else if (name.length > NAME_MAX_LENGTH) {\n            return {\n                validationStatus: 'error',\n                errorMsg: `Name is too long (Maximum ${NAME_MAX_LENGTH} characters allowed.)`\n            }\n        } else {\n            return {\n                validateStatus: 'success',\n                errorMsg: null,\n              };            \n        }\n    }\n\n    validateEmail = (email) => {\n        if(!email) {\n            return {\n                validateStatus: 'error',\n                errorMsg: 'Email may not be empty'                \n            }\n        }\n\n        const EMAIL_REGEX = RegExp('[^@ ]+@[^@ ]+\\\\.[^@ ]+');\n        if(!EMAIL_REGEX.test(email)) {\n            return {\n                validateStatus: 'error',\n                errorMsg: 'Email not valid'\n            }\n        }\n\n        if(email.length > EMAIL_MAX_LENGTH) {\n            return {\n                validateStatus: 'error',\n                errorMsg: `Email is too long (Maximum ${EMAIL_MAX_LENGTH} characters allowed)`\n            }\n        }\n\n        return {\n            validateStatus: null,\n            errorMsg: null\n        }\n    }\n\n    validateUsername = (username) => {\n        if(username.length < USERNAME_MIN_LENGTH) {\n            return {\n                validateStatus: 'error',\n                errorMsg: `Username is too short (Minimum ${USERNAME_MIN_LENGTH} characters needed.)`\n            }\n        } else if (username.length > USERNAME_MAX_LENGTH) {\n            return {\n                validationStatus: 'error',\n                errorMsg: `Username is too long (Maximum ${USERNAME_MAX_LENGTH} characters allowed.)`\n            }\n        } else {\n            return {\n                validateStatus: null,\n                errorMsg: null\n            }\n        }\n    }\n\n    validateUsernameAvailability() {\n        // First check for client side errors in username\n        const usernameValue = this.state.username.value;\n        const usernameValidation = this.validateUsername(usernameValue);\n\n        if(usernameValidation.validateStatus === 'error') {\n            this.setState({\n                username: {\n                    value: usernameValue,\n                    ...usernameValidation\n                }\n            });\n            return;\n        }\n\n        this.setState({\n            username: {\n                value: usernameValue,\n                validateStatus: 'validating',\n                errorMsg: null\n            }\n        });\n\n        checkUsernameAvailability(usernameValue)\n        .then(response => {\n            if(response.available) {\n                this.setState({\n                    username: {\n                        value: usernameValue,\n                        validateStatus: 'success',\n                        errorMsg: null\n                    }\n                });\n            } else {\n                this.setState({\n                    username: {\n                        value: usernameValue,\n                        validateStatus: 'error',\n                        errorMsg: 'This username is already taken'\n                    }\n                });\n            }\n        }).catch(error => {\n            // Marking validateStatus as success, Form will be recchecked at server\n            this.setState({\n                username: {\n                    value: usernameValue,\n                    validateStatus: 'success',\n                    errorMsg: null\n                }\n            });\n        });\n    }\n\n    validateEmailAvailability() {\n        // First check for client side errors in email\n        const emailValue = this.state.email.value;\n        const emailValidation = this.validateEmail(emailValue);\n\n        if(emailValidation.validateStatus === 'error') {\n            this.setState({\n                email: {\n                    value: emailValue,\n                    ...emailValidation\n                }\n            });    \n            return;\n        }\n\n        this.setState({\n            email: {\n                value: emailValue,\n                validateStatus: 'validating',\n                errorMsg: null\n            }\n        });\n\n        checkEmailAvailability(emailValue)\n        .then(response => {\n            if(response.available) {\n                this.setState({\n                    email: {\n                        value: emailValue,\n                        validateStatus: 'success',\n                        errorMsg: null\n                    }\n                });\n            } else {\n                this.setState({\n                    email: {\n                        value: emailValue,\n                        validateStatus: 'error',\n                        errorMsg: 'This Email is already registered'\n                    }\n                });\n            }\n        }).catch(error => {\n            // Marking validateStatus as success, Form will be recchecked at server\n            this.setState({\n                email: {\n                    value: emailValue,\n                    validateStatus: 'success',\n                    errorMsg: null\n                }\n            });\n        });\n    }\n\n    validatePassword = (password) => {\n        if(password.length < PASSWORD_MIN_LENGTH) {\n            return {\n                validateStatus: 'error',\n                errorMsg: `Password is too short (Minimum ${PASSWORD_MIN_LENGTH} characters needed.)`\n            }\n        } else if (password.length > PASSWORD_MAX_LENGTH) {\n            return {\n                validationStatus: 'error',\n                errorMsg: `Password is too long (Maximum ${PASSWORD_MAX_LENGTH} characters allowed.)`\n            }\n        } else {\n            return {\n                validateStatus: 'success',\n                errorMsg: null,\n            };            \n        }\n    }\n\n}\n\nexport default Signup;","const colors = [\n    '#F44336', '#e91e63', '#9c27b0', '#673ab7',\n    '#ff9800', '#ff5722', '#795548', '#607d8b',\n    '#3f51b5', '#2196F3', '#00bcd4', '#009688',\n    '#2196F3', '#32c787', '#00BCD4', '#ff5652',\n    '#ffc107', '#ff85af', '#FF9800', '#39bbb0',\n    '#4CAF50', '#ffeb3b', '#ffc107',\n];\n\nexport function getAvatarColor(name) {\n    name = name.substr(0, 6);\n\n    var hash = 0;\n    for (var i = 0; i < name.length; i++) {\n        hash = 31 * hash + name.charCodeAt(i);\n    }\n    var index = Math.abs(hash % colors.length);\n    return colors[index];\n}","import React from 'react';\nimport { Spin, Icon } from 'antd';\n\nexport default function LoadingIndicator(props) {\n    const antIcon = <Icon type=\"loading-3-quarters\" style={{ fontSize: 80 }} spin />;\n    return (\n        <Spin indicator={antIcon} style = {{display: 'block', textAlign: 'center', marginTop: 30}} />\n    );\n}","import React, { Component } from 'react';\nimport './NotFound.css';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'antd';\n\nclass NotFound extends Component {\n    render() {\n        return (\n            <div className=\"page-not-found\">\n                <h1 className=\"title\">\n                    404\n                </h1>\n                <div className=\"desc\">\n                    The Page you're looking for was not found.\n                </div>\n                <Link to=\"/\"><Button className=\"go-back-btn\" type=\"primary\" size=\"large\">Go Back</Button></Link>\n            </div>\n        );\n    }\n}\n\nexport default NotFound;","import React, { Component } from 'react';\nimport './ServerError.css';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'antd';\n\nclass ServerError extends Component {\n    render() {\n        return (\n            <div className=\"server-error-page\">\n                <h1 className=\"server-error-title\">\n                    500\n                </h1>\n                <div className=\"server-error-desc\">\n                    Oops! Something went wrong at our Server. Why don't you go back?\n                </div>\n                <Link to=\"/\"><Button className=\"server-error-go-back-btn\" type=\"primary\" size=\"large\">Go Back</Button></Link>\n            </div>\n        );\n    }\n}\n\nexport default ServerError;","import React, { Component } from 'react';\n\nimport { getUserProfile } from '../../util/APIUtils';\nimport { Avatar } from 'antd';\nimport { getAvatarColor } from '../../util/Colors';\n//import UserData from '../../userdata/UserData';\n//import { formatDate } from '../../util/Helpers';\nimport LoadingIndicator  from '../../common/LoadingIndicator';\nimport './Profile.css';\nimport NotFound from '../../common/NotFound';\nimport ServerError from '../../common/ServerError';\n\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: null,\n            isLoading: false\n        }\n        this.loadUserProfile = this.loadUserProfile.bind(this);\n        \n    }\n\n    loadUserProfile(username) {\n        this.setState({\n            isLoading: true\n        });\n\n       \n\n        getUserProfile(username)\n        .then(response => {\n            this.setState({\n                user: response,\n                isLoading: false\n            });\n        }).catch(error => {\n            if(error.status === 404) {\n                this.setState({\n                    notFound: true,\n                    isLoading: false\n                });\n            } else {\n                this.setState({\n                    serverError: true,\n                    isLoading: false\n                });        \n            }\n        });        \n    }\n\n    componentDidMount() {\n        const username = this.props.match.params.username;\n        this.loadUserProfile(username);\n\n         this.setState({\n            variable:this.props.currentUser\n        });\n\n    }\n\n    componentDidUpdate(nextProps) {\n        if(this.props.match.params.username !== nextProps.match.params.username) {\n            this.loadUserProfile(nextProps.match.params.username);\n        }        \n    }\n\n    render() {\n        if(this.state.isLoading) {\n            return <LoadingIndicator />;\n        }\n\n        if(this.state.notFound) {\n            return <NotFound />;\n        }\n\n        if(this.state.serverError) {\n            return <ServerError />;\n        }\n\n        \n        \n        \n\n        return (\n            <div className=\"profile\">\n                { \n                    this.state.user ? (\n                        <div className=\"user-profile\">\n                            <div className=\"user-details\">\n                                <div className=\"user-avatar\">\n                                    <Avatar className=\"user-avatar-circle\" style={{ backgroundColor: getAvatarColor(this.state.user.name)}}>\n                                        {this.state.user.name[0].toUpperCase()}\n                                    </Avatar>\n                                </div>\n                                <div className=\"user-summary\">\n                                    <div className=\"full-name\">{this.state.user.name}</div>\n                                    <div className=\"username\">@{this.state.user.username}</div>\n                                    <div className=\"email\">{this.state.user.email}</div>\n                                   \n                                </div>\n                            </div>\n                            \n                        </div>\n                    ): null \n                }\n            </div>\n        );\n    }\n\n\n\n}\n\n\n\nexport default Profile;","import React, { Component } from 'react';\nimport {\n    Link,\n    withRouter\n} from 'react-router-dom';\nimport './AppHeader.css';\n//import pollIcon from '../poll.svg';\nimport { Layout, Menu, Dropdown, Icon } from 'antd';\nconst Header = Layout.Header;\n    \nclass AppHeader extends Component {\n    constructor(props) {\n        super(props);   \n        this.handleMenuClick = this.handleMenuClick.bind(this);   \n    }\n\n    handleMenuClick({ key }) {\n      if(key === \"logout\") {\n        this.props.onLogout();\n        this.props.history.push(\"/login\");\n          \n      }\n    }\n\n    render() {\n        let menuItems;\n        if(this.props.currentUser) {\n          menuItems = [\n            <Menu.Item key=\"/\">\n              <Link to=\"/\">\n                <Icon type=\"home\" className=\"nav-icon\" />\n              </Link>\n            </Menu.Item>,\n            <Menu.Item key=\"\">\n            <Link to=\"#\">\n             \n            </Link>\n          </Menu.Item>,\n          <Menu.Item key=\"\" className=\"profile-menu\">\n                <ProfileDropdownMenu \n                  currentUser={this.props.currentUser} \n                  handleMenuClick={this.handleMenuClick}/>\n            </Menu.Item>\n          ]; \n        } else {\n          menuItems = [\n            <Menu.Item key=\"/login\">\n              <Link to=\"/login\">Login</Link>\n            </Menu.Item>,\n            <Menu.Item key=\"/signup\">\n              <Link to=\"/signup\">Signup</Link>\n            </Menu.Item>                  \n          ];\n        }\n\n        return (\n            <Header className=\"app-header\">\n            <div className=\"container\">\n              <div className=\"app-title\" >\n                <Link to=\"/\">Rest - Marvel</Link>\n              </div>\n              <Menu\n                className=\"app-menu\"\n                mode=\"horizontal\"\n                selectedKeys={[this.props.location.pathname]}\n                style={{ lineHeight: '64px' }} >\n                  {menuItems}\n              </Menu>\n            </div>\n          </Header>\n        );\n    }\n}\n\nfunction ProfileDropdownMenu(props) {\n  const dropdownMenu = (\n    <Menu onClick={props.handleMenuClick} className=\"profile-dropdown-menu\">\n      <Menu.Item key=\"user-info\" className=\"dropdown-item\" disabled>\n        <div className=\"user-full-name-info\">\n          {props.currentUser.name}\n        </div>\n        <div className=\"username-info\">\n          @{props.currentUser.username}\n        </div>\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item key=\"profile\" className=\"dropdown-item\">\n        <Link to={`/users/${props.currentUser.username}`}>Profile</Link>\n      </Menu.Item>\n      <Menu.Item key=\"logout\" className=\"dropdown-item\">\n        Logout\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Dropdown \n      overlay={dropdownMenu} \n      trigger={['click']}\n      getPopupContainer = { () => document.getElementsByClassName('profile-menu')[0]}>\n      {/* eslint-disable-next-line */}\n      <a target='_blank' className=\"ant-dropdown-link\">\n         <Icon type=\"user\" className=\"nav-icon\" style={{marginRight: 0}} /> <Icon type=\"down\" />\n      </a>\n\n    </Dropdown>//eslint-disable-next-line\n  );\n}\n\n\nexport default withRouter(AppHeader);","import React, { Component } from 'react';\r\nimport { Button, List, Card, Avatar,Divider, Tag, Popconfirm,message, Icon  } from 'antd';\r\nconst { Meta } = Card;\r\n\r\n\r\n\r\nclass Characters extends Component {\r\n        calc(item){\r\n            this.props.callback(item);\r\n        }\r\n        calc2(item){\r\n          this.props.random(item);\r\n        }\r\n\r\n        confirm(e) {\r\n          console.log(e);\r\n\r\n          message.success('Click on Yes');\r\n          this.calc2(e)\r\n        }\r\n\r\n        cancel(e) {\r\n          console.log(e);\r\n          message.error('Click on No');\r\n        }\r\n\r\n       \r\n\r\n\r\n\t    render() {\r\n        \r\n              \r\n        return (\r\n           <List\r\n            grid={{ gutter: 20, column: 2 }}\r\n            dataSource={this.props.results}\r\n            renderItem={item => (\r\n                \r\n              <List.Item>\r\n                <Card >\r\n                  <Meta\r\n                    avatar={<div><Divider type=\"vertical\" /><Avatar size={120} src={item.thumbnail.path+\".\"+item.thumbnail.extension} /></div>}\r\n                    title={ <Tag color=\"purple\">{item.name}</Tag>}\r\n                    description={<Divider><Button type=\"primary\" shape=\"circle\" size=\"large\" onClick={() => this.calc(item)} icon=\"picture\"></Button></Divider>}\r\n                  />\r\n                  \r\n                  {<Popconfirm title=\"Are you add random comics?\" onConfirm={() => this.confirm(item)} onCancel={() => this.cancel('cancel')} okText=\"Yes\" cancelText=\"No\">\r\n                      \r\n                      <a>selected 3 comics <Icon type=\"smile\" style={{ fontSize: '20px', color: '#08c' }} theme=\"outlined\" /></a>\r\n                      \r\n                    </Popconfirm>}\r\n                </Card>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default Characters;\r\n","import React, { Component } from 'react';\r\nimport { Avatar, Col, Row ,Card, Tag,Popconfirm, message } from 'antd';\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Comics extends Component {\r\n\r\n\r\n  calc(item,characters){\r\n            this.props.savedata(item,characters);\r\n        }\r\n\r\n  confirm(e,c) {\r\n    console.log(e);\r\n   this.calc(e,c);\r\n    message.success('Click on Yes');\r\n  }\r\n\r\n   cancel(e) {\r\n    console.log(e);\r\n    message.error('Click on No');\r\n  }\r\n        \r\n\r\n\r\n\r\n\r\n\t    render() {\r\n        \r\n        return (\r\n      \r\n          <div>\r\n\r\n          <Row align=\"center\">\r\n            <Col span={12}>\r\n              <div>\r\n              <Card bordered={false} style={{background:'#330000'}}>\r\n\r\n              <Avatar shape=\"square\" size={250} src={this.props.results.thumbnail.path+\".\"+this.props.results.thumbnail.extension} />\r\n               <Popconfirm title=\"Are you sure add favourite?\" onConfirm={() => this.confirm(this.props.results, this.props.charactersid)} onCancel={() => this.cancel('cancel')} okText=\"Yes\" cancelText=\"No\">\r\n                           <Tag style={{'font-size': '15px'}} color=\"#f50\">Add Favourite</Tag>\r\n                          </Popconfirm>\r\n\r\n               <p style={{color:'#FFFFFF'}}>{this.props.results.title}</p>\r\n               </Card></div>\r\n              </Col>\r\n            <Col span={12}><div>\r\n                <Card style={{opacity: 0.5, background:'#000000'}}>\r\n                    { this.props.results.description ? \r\n                        <div>\r\n                          <Tag color=\"red\">Description</Tag>\r\n                          <p style={{color:'#FFFFFF', 'font-size': '11px'}} >{this.props.results.description}</p>\r\n                        </div> : <h3 style={{color:'#FFFFFF'}}>No description</h3>\r\n                    }\r\n                </Card>\r\n                </div>\r\n              \r\n            </Col>\r\n\r\n          </Row>\r\n          \r\n          </div>\r\n        \r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Comics;\r\n","import React, { Component } from 'react';\r\nimport { List, Avatar, Card, Tag } from 'antd';\r\nconst { Meta } = Card;\r\n\r\n\r\nclass Favoutire extends Component {\r\n        calc(page,size){\r\n            this.props.searcomics(page,size);\r\n\r\n        }\r\n\r\n\r\n\r\n       \r\n      \r\n\r\n\t    render() {\r\n        \r\n        const sizecomics=this.props.element;\r\n\r\n        return (\r\n\r\n          <List\r\n            itemLayout=\"vertical\"\r\n            size=\"large\"\r\n            pagination={{\r\n              onChange: (page) => {\r\n                this.calc(page,4);\r\n\r\n              },\r\n              pageSize: 4,\r\n              total:sizecomics,\r\n            }}\r\n            dataSource={this.props.results}\r\n            \r\n            renderItem={item => (\r\n              <List.Item>\r\n              \r\n              <Card align=\"center\" bordered={false}>\r\n              <p style={{'font-size': '10px'}}><Tag color=\"green\"><b>Character:</b></Tag>{  item.titleCharacter}</p>\r\n              <p style={{'font-size': '10px'}}><b>Comics:</b>{ item.titleComics}</p>\r\n              \r\n                <Meta\r\n                    avatar={<Avatar shape=\"square\" size={140} src={item.uriimage} />}\r\n                    \r\n                    \r\n                  />\r\n                 \r\n                </Card >\r\n              </List.Item>\r\n            )}\r\n          />\r\n           \r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default Favoutire;\r\n","import React, { Component } from 'react';\r\nimport {getComicsView,getMarvelCharacters,checkCharacterAvailability,createCharacter,getMarvelCharactersComics} from '../util/APIUtils';\r\nimport { withRouter } from 'react-router-dom';\r\nimport LoadingIndicator  from '../common/LoadingIndicator';\r\nimport {Carousel,notification, Pagination, Layout, Modal } from 'antd';\r\nimport './Show.css';\r\nimport NotFound from '../common/NotFound';\r\nimport ServerError from '../common/ServerError';\r\nimport Characters from './Characters';\r\nimport Comics from './Comics';\r\nimport Favourite from './Favourite';\r\n\r\n\r\nconst { Header, Sider, Content,\r\n        } = Layout;\r\n\r\n\r\n\r\nclass Show extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            characters: [],\r\n            page: 0,\r\n            size: 20,\r\n            totalElements: 0,\r\n            results:[],\r\n            currenUser:[],\r\n            isLoading: false,\r\n            comics:[],\r\n            visible:false,\r\n            charactersid:null,\r\n            viewcomics:[],\r\n            comicssize:0,\r\n            lengthcomics:0,\r\n            isload:false,\r\n\r\n            \r\n        };\r\n        this.loadCharacte = this.loadCharacte.bind(this);\r\n        this.onShowSizeChange=this.onShowSizeChange.bind(this);\r\n        this.saveData=this.saveData.bind(this);\r\n        this.showModal=this.showModal.bind(this);\r\n        this.loadComicsView=this.loadComicsView.bind(this);\r\n        this.funtionRandom=this.funtionRandom.bind(this);\r\n\r\n    }\r\n\r\n    funtionRandom(item){\r\n        if (this.props.isAuthenticated===false) {\r\n             notification.error({\r\n                            message: \"Favourite\",\r\n                            description: 'Sorry! login no authenticate',\r\n                        });\r\n            return;\r\n        }\r\n        getMarvelCharactersComics(item.id).then(response => {\r\n            let rand;\r\n            for (var i = 0; i < 3; i++) {\r\n                rand=Math.floor(Math.random() * response.data.results.length) + 1;\r\n                   console.log(rand-1);\r\n                  if (response.data.results.length===0) {\r\n                    notification.error({\r\n                            message: \"No Pictures\",\r\n                            description: 'Sorry! no resource',\r\n                        });\r\n                    return;\r\n                  }\r\n                   this.saveData(response.data.results[rand-1],item)\r\n               }   \r\n        });\r\n\r\n\r\n    }\r\n\r\n    showModal(item){\r\n\r\n        this.setState({\r\n        visible: true, isload:true });\r\n        getMarvelCharactersComics(item.id).then(response => {\r\n           if (response.data.results.length===0) {\r\n            this.hideModal();\r\n            notification.error({\r\n                            message: \"Resource\",\r\n                            description: 'Sorry! no pictures',\r\n                        });\r\n           }\r\n           this.setState({\r\n              comics:response.data.results,\r\n              charactersid:item\r\n            });\r\n        });\r\n\r\n\r\n        \r\n    }\r\n\r\n     hideModal = () => {\r\n        this.setState({\r\n          visible: false,\r\n          comics:[],\r\n          charactersid:null,\r\n        });\r\n    }\r\n\r\n   \r\n    saveData(item,id){\r\n\r\n        if (this.props.isAuthenticated===false) {\r\n             notification.error({\r\n                            message: \"favourite\",\r\n                            description: 'Sorry! login no authenticate',\r\n                        });\r\n            return;\r\n        }\r\n\r\n        \r\n            const comicsRequest = {\r\n                charactersid: id.id,\r\n                userid: this.props.currentUser.id,\r\n                comicsid: item.id,\r\n                uriimage: item.thumbnail.path+\".\"+item.thumbnail.extension,\r\n                description: item.description,\r\n                titleCharacter: id.name,\r\n                titleComics: \".\"+item.title\r\n                \r\n            };\r\n            \r\n\r\n\r\n\r\n            checkCharacterAvailability(id.id,item.id,this.props.currentUser.id)\r\n            .then(response => {\r\n                if(response.available) {\r\n                \r\n                    createCharacter(comicsRequest)\r\n                    .then(response => {\r\n                        notification.success({\r\n                            message: item.name+\" favourite\",\r\n                            description: \"Thank you! The favorite comics was saved successfully\",\r\n                        });\r\n                        this.loadComicsView(0,4);          \r\n                        \r\n                    }).catch(error => {\r\n                        notification.error({\r\n                            message: item.name+\" favourite\",\r\n                            description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                        });\r\n                    });\r\n\r\n\r\n                    \r\n\r\n\r\n                } else {\r\n                notification.error({\r\n                            message: \"favourite\",\r\n                            description: 'Sorry! Character already exists!',\r\n                        });\r\n                }\r\n            }).catch(error => {\r\n            \r\n            });\r\n            \r\n            \r\n        \r\n    }\r\n\r\n    loadComicsView(page,size){\r\n        if (page>0) {\r\n            page=page-1;\r\n        }\r\n        getComicsView(page,size).then(item=>{\r\n            this.setState({\r\n                viewcomics:item.content,\r\n                comicssize:item.totalElements\r\n\r\n            });\r\n        });       \r\n        \r\n    }\r\n\r\n     loadCharacte(current) {\r\n\r\n        let promise;\r\n        if (current) {\r\n            promise = getMarvelCharacters(current);    \r\n        }else{\r\n            promise = getMarvelCharacters(0);    \r\n        }\r\n        \r\n        \r\n        if(!promise) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        promise            \r\n        .then(response => {\r\n            const characters = this.state.characters.slice();\r\n            this.setState({\r\n                characters: characters.concat(response.data),\r\n                size:response.data.limit,\r\n                page:response.data.offset,\r\n                totalElements:response.data.total,\r\n                results:response.data.results, \r\n                isLoading: false\r\n\r\n                \r\n            })\r\n\r\n        }).catch(error => {\r\n            if(error.status === 404) {\r\n                this.setState({\r\n                    notFound: true,\r\n                    isLoading: false\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    serverError: true,\r\n                    isLoading: false\r\n                });        \r\n            }\r\n        }); \r\n        \r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n            this.loadCharacte(this.state.current);\r\n            this.loadComicsView(0,4);\r\n\r\n\r\n    }\r\n\r\n    componentDidUpdate(nextProps) {\r\n        if(this.props.isAuthenticated !== nextProps.isAuthenticated) {\r\n            \r\n            this.setState({\r\n            characters: [],\r\n            page: 0,\r\n            size: 20,\r\n            totalElements: 0,\r\n            results:[],\r\n            isLoading: false\r\n            });    \r\n            \r\n        }\r\n    }\r\n\r\n    onShowSizeChange(page) {\r\n      this.loadCharacte(page);\r\n    }\r\n    \r\n    render() {\r\n        \r\n        if(this.state.notFound) {\r\n            return <NotFound />;\r\n        }\r\n\r\n        if(this.state.serverError) {\r\n            return <ServerError />;\r\n        }\r\n\r\n        if (this.props.isAuthenticated===false) {\r\n            \r\n        }\r\n       \r\n        const favouriteViews=<Favourite element={this.state.comicssize} searcomics={this.loadComicsView.bind(this)} results={this.state.viewcomics} />;\r\n         \r\n\r\n        let comicsView=[];\r\n        this.state.comics.forEach(response=>{\r\n            comicsView.push(<Comics  charactersid={this.state.charactersid} savedata={this.saveData.bind(this)} results={response} />);\r\n        });\r\n        const characterViews = <Characters random={this.funtionRandom.bind(this)} results={this.state.results} callback={this.showModal.bind(this)} />;\r\n        \r\n\r\n        \r\n\r\n        return(\r\n            <Layout>\r\n                \r\n                  <Header>\r\n                    <h2>Favourite Comics</h2>\r\n                  </Header>\r\n                    {\r\n                        this.state.isLoading ? \r\n                        <LoadingIndicator />:\r\n                        <Layout>\r\n\r\n                        <Sider>\r\n                            \r\n                            {favouriteViews}\r\n                        </Sider>\r\n                           <Content> \r\n                            <Pagination onChange={(page)=>this.onShowSizeChange(page)} showQuickJumper current={this.state.page}  total={this.state.totalElements*10} />\r\n                            <br></br>\r\n                            {characterViews}\r\n                            <Pagination onChange={(page)=>this.onShowSizeChange(page)} showQuickJumper current={this.state.page}  total={this.state.totalElements*10} />\r\n                            </Content>\r\n                        </Layout>\r\n                    }\r\n            <div>\r\n         \r\n                <Modal\r\n\r\n                bodyStyle={{background:'#330000'}}\r\n                    style={{background:'#330000'}}\r\n                  width={700}\r\n                  visible={this.state.visible}\r\n                  onOk={this.hideModal}\r\n                  onCancel={this.hideModal}\r\n                  okText=\"Ok\"\r\n                  cancelText=\"cancel\">\r\n                    {this.state.comics.length===0 ? \r\n                        <LoadingIndicator />:\r\n                        <div><Carousel autoplay={true} effect=\"fade\">\r\n                            {comicsView}\r\n                          </Carousel>\r\n                        </div>\r\n                    }\r\n                </Modal>\r\n             </div>\r\n            </Layout>\r\n            \r\n\r\n        );\r\n    }\r\n\r\n\r\n}\r\nexport default withRouter(Show);","import React, { Component } from 'react';\nimport './App.css';\nimport {\n  Route,\n  withRouter,\n  Switch\n} from 'react-router-dom';\n\nimport { getCurrentUser } from '../util/APIUtils';\nimport { ACCESS_TOKEN, MESSAJE_APP } from '../constants';\n\n\nimport Login from '../user/login/Login';\nimport Signup from '../user/signup/Signup';\nimport Profile from '../user/profile/Profile';\nimport AppHeader from '../common/AppHeader';\nimport NotFound from '../common/NotFound';\nimport LoadingIndicator from '../common/LoadingIndicator';\nimport Show from '../marvel/Show';\n//import PrivateRoute from '../common/PrivateRoute';\n\nimport { Layout, notification } from 'antd';\nconst { Content } = Layout;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      isAuthenticated: false,\n      isLoading: false\n    }\n    this.handleLogout = this.handleLogout.bind(this);\n    this.loadCurrentUser = this.loadCurrentUser.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n\n    notification.config({\n      placement: 'topRight',\n      top: 70,\n      duration: 3,\n    });    \n  }\n\n  loadCurrentUser() {\n    this.setState({\n      isLoading: true\n    });\n    getCurrentUser()\n    .then(response => {\n      this.setState({\n        currentUser: response,\n        isAuthenticated: true,\n        isLoading: false\n      });\n    }).catch(error => {\n      this.setState({\n        isLoading: false\n      });  \n    });\n  }\n\n  componentDidMount() {\n    this.loadCurrentUser();\n  }\n\n  handleLogout(redirectTo=\"/\", notificationType=\"success\", description=\"Usted ha cerrado sesión\") {\n    localStorage.removeItem(ACCESS_TOKEN);\n\n    this.setState({\n      currentUser: null,\n      isAuthenticated: false\n    });\n\n    this.props.history.push(redirectTo);\n    \n    notification[notificationType]({\n      message: MESSAJE_APP,\n      description: description,\n    });\n  }\n\n  handleLogin() {\n    notification.success({\n      message: MESSAJE_APP,\n      description: \"Usted ha iniciado sesión\",\n    });\n    this.loadCurrentUser();\n    this.props.history.push(\"/\");\n  }\n\n  render() {\n    if(this.state.isLoading) {\n      return <LoadingIndicator />\n    }\n    return (\n        <Layout className=\"app-container\">\n          <AppHeader isAuthenticated={this.state.isAuthenticated} \n            currentUser={this.state.currentUser} \n            onLogout={this.handleLogout} />\n\n          <Content className=\"app-content\">\n            <div className=\"container\">\n              <Switch>      \n                <Route exact path=\"/\" \n                render={(props) => <Show isAuthenticated={this.state.isAuthenticated} \n                      currentUser={this.state.currentUser} handleLogout={this.handleLogout} {...props} />}>\n                </Route>\n                <Route path=\"/login\" \n                  render={(props) => <Login onLogin={this.handleLogin} {...props} />}></Route>\n                <Route path=\"/signup\" component={Signup}></Route>\n                <Route path=\"/users/:username\" \n                  render={(props) => <Profile isAuthenticated={this.state.isAuthenticated} currentUser={this.state.currentUser} {...props}  />}>\n                </Route>\n               \n                <Route component={NotFound}></Route>\n              </Switch>\n            </div>\n          </Content>\n        </Layout>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, \n    document.getElementById('root')\n\n);\n\nserviceWorker();\n"],"sourceRoot":""}